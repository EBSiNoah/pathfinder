길찾기

https://www.acmicpc.net/problem/20554
위 링크의 응용임을 알림

PathFinder01C 가 최종 버전이다.
기존에는 각 경우의 수를 일일이 따져보아야 했다.
이 함수는 모든 경우의 수를 살펴볼수 있으면서, 가독성이 더 좋고, 응용하기 좋다.
R,L,U,D 문자에 따라 이동 방향을 정하게 되는데
여기서 이 문자는 알파벳이고, 아스키 코드에 등록된 문자임을 알 수 있다.
알파벳은 대문자 26개가 있으며, 이는 크기가 26인 배열에 저장된 자료형과 같다.

우선 이동 가능한 전체 크기를 알아야 한다.
입력받은 전체 N 크기보다 2 만큼 큰 1차원 배열 over 을 선언하고
0번째, N+1 번째 원소로 각각 1, N으로 초기화한다. 나머지는 순서와 각 원소 값이 동일하도록 만든다.

1차원 배열 Vec 은 현재 위치이다.
1차원 xVec 은 R,L 의 아스키 코드 순서와 동일하게 위치하는데, 각각 1, -1 값을 가지도록 하였다.
1차원 yVec 또한 마찬가지로 U,D 의 아스키 코드 순서와 동일하게 위치하고 각각 -1, 1의 값을 가지도록 하였다.

입력받은 문자열을 읽어서 반복문 내에서 계산하게 된다.
문자열을 순서대로 읽으면서 xVec, yVec 의 원소를 통해 Vec에 영향을 주게 되는데,
중간에 전체 크기를 벗어나지 않도록 over 배열을 통해 범위를 벗어난 경우, 즉 0 또는 N+1 의 위치로 이동하는 경우
over의 0번째, N+1번째 원소 값은 각각 1, N 이므로
over의 Vec 원소번째 원소를 Vec에 삽입하여 0 또는 N+1 위치로 가지 않도록 하였다.
